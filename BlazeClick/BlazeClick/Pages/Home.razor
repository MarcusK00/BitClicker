@page "/"
@using BlazeClick.Models

<PageTitle>Home</PageTitle>
<div class="stars-bg">
    <div class="star star1"></div>
    <div class="star star2"></div>
    <div class="star star3"></div>
    <div class="star star4"></div>
    <div class="star star5"></div>
    <div class="star star6"></div>
    <div class="star star7"></div>
    <div class="star star8"></div>
    <div class="star star9"></div>
    <div class="star star10"></div>
    <div class="star star11"></div>
    <div class="star star12"></div>
    <div class="star star13"></div>
    <div class="star star14"></div>
    <div class="star star15"></div>
    <div class="star star16"></div>
    <div class="star star17"></div>
    <div class="star star18"></div>
    <div class="star star19"></div>
    <div class="star star20"></div>
</div>

<div class="center-container">
    <h1 class="title">Bit Miner</h1>
    <h3 class="click-count">Current Bits: @logic.BitCount</h3>
    <button class="click-button" @onclick="BtnClick">Mine</button>
</div>

<div class="shop-container">
    @foreach (var item in logic.ShopItems.Values)
    {
        <button class="shop-btn @(item.Name.ToLower().Replace(" ", "-"))
                           @(logic.BitCount < item.CurrentCost ? "shop-btn-locked" : "shop-btn-unlocked")"
                @onclick="() => BuyItem(item.Type)"
                disabled="@(logic.BitCount < item.CurrentCost)">
            @item.Name<br />
            <span class="shop-cost">@item.CurrentCost bits</span><br />
            <span>Owned: @item.Owned</span>
        </button>
    }
</div>

@code {
    private GameLogic logic = new();


    private void BtnClick()
    {
        logic.Click();
    }

    public void BuyItem(ShopItemType type)
    {
        logic.BuyItem(type);
    }

}